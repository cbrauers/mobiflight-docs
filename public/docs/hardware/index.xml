<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MobiFlight documentation – Hardware</title>
    <link>http://localhost:1313/docs/hardware/</link>
    <description>Recent content in Hardware on MobiFlight documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	  <atom:link href="http://localhost:1313/docs/hardware/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Input shift registers</title>
      <link>http://localhost:1313/docs/hardware/input-shift-register/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/hardware/input-shift-register/</guid>
      <description>
        
        
        &lt;p&gt;As you continue to build panels you may encounter situations where you have more buttons for input than there are pins available on your Arduino. The solution is to use an input shift register like the &lt;a href=&#34;https://www.ti.com/product/SN74HC165&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;74HC165&lt;/a&gt;. These allow you to read input from eight buttons while only using three pins on the Arduino.&lt;/p&gt;
&lt;p&gt;MobiFlight supports up to 32 bits of shift registers in a chain (typically four eight-bit chips), and up to six chains of input shifters can be connected to a single Arduino.&lt;/p&gt;
&lt;h1&gt;What you&amp;rsquo;ll need&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;A 74HC165 chip&lt;/li&gt;
&lt;li&gt;Eight buttons&lt;/li&gt;
&lt;li&gt;Eight 10kΩ resistors&lt;/li&gt;
&lt;li&gt;A 0.1uF capacitor&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The chip is available anywhere you buy electronics, including &lt;a href=&#34;https://www.amazon.com/Bridgold-SN74HC165-74HC165-Parallel-Load-Registers/dp/B095KNTCKN/ref=sr_1_3?crid=293SFF21893S9&amp;amp;keywords=74hc165&amp;amp;qid=1641735408&amp;amp;sprefix=74hc16%2Caps%2C383&amp;amp;sr=8-3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amazon&lt;/a&gt;, &lt;a href=&#34;https://www.ebay.com/sch/i.html?_from=R40&amp;amp;_trksid=p2380057.m570.l1313&amp;amp;_nkw=74hc165&amp;amp;_sacat=0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;eBay&lt;/a&gt;, &lt;a href=&#34;https://www.aliexpress.com/wholesale?catId=0&amp;amp;initiative_id=SB_20220109053846&amp;amp;SearchText=74hc165&amp;#43;dip&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AliExpress&lt;/a&gt;, &lt;a href=&#34;https://www.taydaelectronics.com/74hc165-74165-ic-8-bit-shift-register.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tayda Electronics&lt;/a&gt; and &lt;a href=&#34;https://octopart.com/search?q=74HC165&amp;amp;currency=USD&amp;amp;specs=0&amp;amp;case_package=DIP&amp;amp;case_package=PDIP&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;many other parts suppliers&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Making the connections&lt;/h1&gt;&lt;p&gt;Connect the 74HC165 to your Arduino and the buttons as follows. The resistors are required on every input pin, even if you aren&amp;rsquo;t attaching a button to that pin:&lt;/p&gt;
&lt;img width=&#34;956&#34; alt=&#34;Untitled&#34; src=&#34;https://user-images.githubusercontent.com/9524118/158711557-d9f76041-65cb-4fae-bbd5-60cbef7a9224.png&#34;&gt;
&lt;p&gt;While the wiring diagram shows an 8-position DIP switch you can use 8 individual tactile buttons instead.&lt;/p&gt;
&lt;h1&gt;Device configuration - input shift register&lt;/h1&gt;&lt;p&gt;Configure a new device for your Arduino in MobiFlight as follows:&lt;/p&gt;
&lt;img width=&#34;428&#34; alt=&#34;Input shifter device configuration&#34; src=&#34;https://user-images.githubusercontent.com/9524118/148668076-76a88b6c-abe1-47b8-9db6-7d7cdbc5907b.png&#34;&gt;
&lt;p&gt;If you choose to use pins other than 2, 3 and 4 here is how you should map the dropdowns in MobiFlight to the pins on the 74HC165:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;MobiFlight Setting&lt;/th&gt;
          &lt;th&gt;74HC165 input&lt;/th&gt;
          &lt;th&gt;74HC165 pin&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Latch&lt;/td&gt;
          &lt;td&gt;SH/~LD&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Clock&lt;/td&gt;
          &lt;td&gt;CLK&lt;/td&gt;
          &lt;td&gt;2&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Data&lt;/td&gt;
          &lt;td&gt;QH&lt;/td&gt;
          &lt;td&gt;9&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;MobiFlight configuration - button input&lt;/h1&gt;&lt;p&gt;For each input you want to connect to a button configure the input as follows:&lt;/p&gt;
&lt;img width=&#34;406&#34; alt=&#34;Input shifter pin selection&#34; src=&#34;https://user-images.githubusercontent.com/9524118/148667914-fdb4e856-796a-4e49-b2e8-fed6544bd4a4.png&#34;&gt;
&lt;p&gt;The dropdown next to the device name selects which pin on the 74HC165 is mapped to the input configuration. The mapping is as follows, assuming the chip is wired as illustrated earlier in this tutorial:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;MobiFlight Pin&lt;/th&gt;
          &lt;th&gt;74HC165 input&lt;/th&gt;
          &lt;th&gt;74HC165 pin&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;A&lt;/td&gt;
          &lt;td&gt;11&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;B&lt;/td&gt;
          &lt;td&gt;12&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;C&lt;/td&gt;
          &lt;td&gt;13&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;D&lt;/td&gt;
          &lt;td&gt;14&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;E&lt;/td&gt;
          &lt;td&gt;3&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;F&lt;/td&gt;
          &lt;td&gt;4&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;G&lt;/td&gt;
          &lt;td&gt;5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;H&lt;/td&gt;
          &lt;td&gt;6&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;Connecting multiple chips in series&lt;/h1&gt;&lt;p&gt;MobiFlight supports up to four 74HC165 chips connected in parallel. When wiring the chips, it is important to wire them so the right most chip in the series is the one connected to the Arduino&amp;rsquo;s data input line. The clock and latch pins are shared across all chips.&lt;/p&gt;
&lt;img width=&#34;954&#34; alt=&#34;Chained input shifters&#34; src=&#34;https://user-images.githubusercontent.com/9524118/148668026-f78060b7-bad8-4dd8-b655-0b5956b1d041.png&#34;&gt;
&lt;p&gt;(Buttons and pull-up resistors omitted for clarity)&lt;/p&gt;
&lt;p&gt;After wiring the chips in series change the module configuration for the input to specify the number of chips connected in series. The resulting pin numbers in the input configuration dialog are determined by the order the chips are daisy chained together: Pins 0-7 are for the rightmost chip that is directly connected to the Arduino in the above schematic, 8-15 for the second from the right as that is the second in the chain, etc.. Using the debug log feature in MobiFlight will let you also see which number any given switch connected to the shift register is.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Output shift registers</title>
      <link>http://localhost:1313/docs/hardware/output-shift-register/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/hardware/output-shift-register/</guid>
      <description>
        
        
        &lt;p&gt;As you continue to build panels you may encounter situations where you have more LEDs to control than there are pins available on your Arduino. The solution is to use a shift register like the &lt;a href=&#34;https://www.ti.com/lit/ds/symlink/sn74hc595.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;74HC595&lt;/a&gt;. These allow you to have individual control of 8 LEDs while only using three pins on the Arduino. With the addition of a fourth pin you can also get PWM control of the LED brightness.&lt;/p&gt;
&lt;p&gt;MobiFlight supports up to 32 bits of shift registers in a chain (typically four eight-bit chips), and up to six chains of output shifters can be connected to a single Arduino.&lt;/p&gt;
&lt;h1&gt;What you&amp;rsquo;ll need&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;A 74HC595 chip&lt;/li&gt;
&lt;li&gt;8 LEDs&lt;/li&gt;
&lt;li&gt;8 resistors (220Ω or similar)&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Making the connections&lt;/h1&gt;&lt;p&gt;Connect the 74HC595 to your Arduino and LEDs as follows:&lt;/p&gt;
&lt;img alt=&#34;74HC595 connections&#34; src=&#34;https://user-images.githubusercontent.com/9524118/129448844-75cb2a01-6422-4b22-944a-3b4de89f9c2a.png&#34;&gt;
&lt;p&gt;For a more detailed tutorial on how to make the connections see &lt;a href=&#34;https://lastminuteengineers.com/74hc595-shift-register-arduino-tutorial/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this blog post from Last Minute Engineers&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Device configuration - shift register&lt;/h1&gt;&lt;p&gt;Configure a new device for your Arduino as follows:&lt;/p&gt;
&lt;img alt=&#34;MobiFlight device configuration - shift register&#34; src=&#34;https://user-images.githubusercontent.com/9524118/129448856-d56b1615-123f-4878-a7ce-28bf1be734ef.png&#34;&gt;
&lt;p&gt;Note that you are only mapping the three pins to load data into the 74HC595. The brightness control is configured as a separate device in the next section. If you use different pins than D5, D7, and D9 here is how you should map the dropdowns in MobiFlight to the pins on the 74HC595:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;MobiFlight setting&lt;/th&gt;
          &lt;th&gt;74HC595 input&lt;/th&gt;
          &lt;th&gt;74HC595 pin&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Latch&lt;/td&gt;
          &lt;td&gt;RCLK&lt;/td&gt;
          &lt;td&gt;12&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Clock&lt;/td&gt;
          &lt;td&gt;SRCLK&lt;/td&gt;
          &lt;td&gt;11&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Data&lt;/td&gt;
          &lt;td&gt;SER&lt;/td&gt;
          &lt;td&gt;14&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;Device configuration - brightness&lt;/h1&gt;&lt;p&gt;Configure a new device (LED / Output) for your Arduino as follows:&lt;/p&gt;
&lt;img alt=&#34;MobiFlight device configuration - brightness&#34; src=&#34;https://user-images.githubusercontent.com/9524118/129448864-0c14e663-8bdd-48af-9bb2-85a79ffd8000.png&#34;&gt;
&lt;p&gt;Note that the selected pin must support PWM. If you do not want to add support for brightness control skip this step and connect pin 13 of the 74HC595 (~OE) directly to ground.&lt;/p&gt;
&lt;h1&gt;MobiFlight configuration - LED output&lt;/h1&gt;&lt;p&gt;For each output you want to assign to an LED configure the output as follows:&lt;/p&gt;
&lt;img alt=&#34;MobiFlight output configuration - shift register&#34; src=&#34;https://user-images.githubusercontent.com/9524118/129448882-71f81c30-cd3e-49d1-afa0-b2b7789e9460.png&#34;&gt;
&lt;p&gt;The &lt;em&gt;Select Pins&lt;/em&gt; dropdown will show eight different possible outputs. Select the output associated with the LED you want to light up based on the output. Add additional output configurations for each additional value you want to display, selecting a different output for the remaining configurations.&lt;/p&gt;
&lt;h1&gt;MobiFlight configuration - brightness output&lt;/h1&gt;&lt;p&gt;If you connected the ~OE pin to your Arduino you can configure an output to vary the brightness of the LEDs as follows:&lt;/p&gt;
&lt;img alt=&#34;MobiFlight output configuration - brightness&#34; src=&#34;https://user-images.githubusercontent.com/9524118/129448921-f4ed686c-8468-4aef-8467-e67e4c04221f.png&#34;&gt;
&lt;p&gt;The output value must be in the range of 0-255 to control the brightness so you may need to apply an output transformation to the raw value. It is common for the brightness value to get reported from the sim as a percent so a transformation like this will scale the value appropriately:&lt;/p&gt;
&lt;p&gt;255 * ($/100)&lt;/p&gt;
&lt;h1&gt;Next steps&lt;/h1&gt;&lt;p&gt;The basic shift register support opens up a wide range of possibilities for MobiFlight. While this tutorial walked through using a basic shift register the same concepts apply to other chips that function like shift registers. LED control chips like the &lt;a href=&#34;https://www.ti.com/lit/ds/symlink/tlc5917.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TLC5917IN&lt;/a&gt;, &lt;a href=&#34;https://www.ti.com/lit/ds/symlink/tlc5940.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TLC5940&lt;/a&gt; and &lt;a href=&#34;https://trgcomponents.com/uploads/media/SP-DM13A-A.006_01.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DM13A&lt;/a&gt; work the same way with MobiFlight but have the added benefit of ensuring constant current to the LEDs while only requiring a single resistor. While the wiring is slightly different the settings in MobiFlight are the same.&lt;/p&gt;
&lt;h2&gt;Alternative compatible components&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;alternative-compatible-components&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#alternative-compatible-components&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The following drivers should be pin to pin compatible, albeit with different packages and sometime (mostly negligible) performance differences, but be sure to always check the datasheet of a given component to be sure. They usually have an example circuit. If unsure, politely ask on #hardware or #pcb-design on Discord. Also, if you use any of these listed below, feel free to add coments and vendor links after them,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;STP16CP05&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TLC5927&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TLC5928&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TLC59283 (SSOP24 p0.64) (cheap on Mouser)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TB62701&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TB62706&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TB62709&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TB62747 (SSOP24 p1-p0.64) (cheap on Mouser)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TC62D748 (SSOP24 p0.64) (cheap on Mouser)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DM13A (SSOP24 p1-p0.64)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DM134/5/6 (SSOP24 p1-p0.64)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MBI5024 (SSOP24 p1-p0.64)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MBI5026 (DIP-SOP-SSOP)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MBI5041 (SSOP24 p1-p0.64)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SCT2210&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SCT2026&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FD9802&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
